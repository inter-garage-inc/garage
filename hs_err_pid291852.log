#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f42ebf9a1b3, pid=291852, tid=291918
#
# JRE version: OpenJDK Runtime Environment 18.9 (11.0.9+11) (build 11.0.9+11)
# Java VM: OpenJDK 64-Bit Server VM 18.9 (11.0.9+11, mixed mode, sharing, tiered, compressed oops, g1 gc, linux-amd64)
# Problematic frame:
# C  [libjimage.so+0x31b3]  ImageStrings::find(Endian*, char const*, int*, unsigned int)+0x63
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h" (or dumping to /home/joselucasrods/IdeaProjects/garage/core.291852)
#
# If you would like to submit a bug report, please visit:
#   https://bugzilla.redhat.com/enter_bug.cgi?product=Fedora&component=java-11-openjdk&version=33
#

---------------  S U M M A R Y ------------

Command Line: -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError -agentlib:jdwp=transport=dt_socket,server=n,suspend=y,address=127.0.0.1:37031 --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.prefs/java.util.prefs=ALL-UNNAMED -Xms256m -Xmx512m -Dfile.encoding=UTF-8 -Duser.country=US -Duser.language=en -Duser.variant org.gradle.launcher.daemon.bootstrap.GradleDaemon 6.3

Host: Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz, 4 cores, 7G, Fedora release 33 (Thirty Three)
Time: Wed Nov  4 08:22:20 2020 -03 elapsed time: 273.544226 seconds (0d 0h 4m 33s)

---------------  T H R E A D  ---------------

Current thread (0x00007f4249235000):  JavaThread "Execution worker for ':'" [_thread_in_vm, id=291918, stack(0x00007f42991c7000,0x00007f42992c8000)]

Stack: [0x00007f42991c7000,0x00007f42992c8000],  sp=0x00007f42992c3f60,  free space=1011k
Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libjimage.so+0x31b3]  ImageStrings::find(Endian*, char const*, int*, unsigned int)+0x63
C  [libjimage.so+0x3e3d]  ImageFileReader::find_location_index(char const*, unsigned long long*) const+0x4d
C  [libjimage.so+0x43c9]  JIMAGE_FindResource+0x109
V  [libjvm.so+0x5f4f8c]